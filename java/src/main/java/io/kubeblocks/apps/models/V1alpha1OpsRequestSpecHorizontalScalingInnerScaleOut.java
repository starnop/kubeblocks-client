/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.27.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubeblocks.apps.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubeblocks.apps.models.V1alpha1ClusterSpecComponentSpecsInnerInstancesInner;
import io.kubeblocks.apps.models.V1alpha1OpsRequestSpecHorizontalScalingInnerScaleInInstancesInner;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * Specifies the replica changes for scaling out components and instance templates, and brings offline instances back online. Can be used in conjunction with the \&quot;scaleIn\&quot; operation. Note: Any configuration that deletes instances is considered invalid.
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-13T15:59:08.817252Z[Etc/UTC]")
public class V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut {
  public static final String SERIALIZED_NAME_INSTANCES = "instances";
  @SerializedName(SERIALIZED_NAME_INSTANCES)
  private List<V1alpha1OpsRequestSpecHorizontalScalingInnerScaleInInstancesInner> instances;

  public static final String SERIALIZED_NAME_NEW_INSTANCES = "newInstances";
  @SerializedName(SERIALIZED_NAME_NEW_INSTANCES)
  private List<V1alpha1ClusterSpecComponentSpecsInnerInstancesInner> newInstances;

  public static final String SERIALIZED_NAME_OFFLINE_INSTANCES_TO_ONLINE = "offlineInstancesToOnline";
  @SerializedName(SERIALIZED_NAME_OFFLINE_INSTANCES_TO_ONLINE)
  private List<String> offlineInstancesToOnline;

  public static final String SERIALIZED_NAME_REPLICA_CHANGES = "replicaChanges";
  @SerializedName(SERIALIZED_NAME_REPLICA_CHANGES)
  private Integer replicaChanges;

  public V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut() {
  }

  public V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut instances(List<V1alpha1OpsRequestSpecHorizontalScalingInnerScaleInInstancesInner> instances) {
    
    this.instances = instances;
    return this;
  }

  public V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut addInstancesItem(V1alpha1OpsRequestSpecHorizontalScalingInnerScaleInInstancesInner instancesItem) {
    if (this.instances == null) {
      this.instances = new ArrayList<>();
    }
    this.instances.add(instancesItem);
    return this;
  }

   /**
   * Modifies the desired replicas count for existing InstanceTemplate. if the inst
   * @return instances
  **/
  @jakarta.annotation.Nullable
  public List<V1alpha1OpsRequestSpecHorizontalScalingInnerScaleInInstancesInner> getInstances() {
    return instances;
  }


  public void setInstances(List<V1alpha1OpsRequestSpecHorizontalScalingInnerScaleInInstancesInner> instances) {
    this.instances = instances;
  }


  public V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut newInstances(List<V1alpha1ClusterSpecComponentSpecsInnerInstancesInner> newInstances) {
    
    this.newInstances = newInstances;
    return this;
  }

  public V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut addNewInstancesItem(V1alpha1ClusterSpecComponentSpecsInnerInstancesInner newInstancesItem) {
    if (this.newInstances == null) {
      this.newInstances = new ArrayList<>();
    }
    this.newInstances.add(newInstancesItem);
    return this;
  }

   /**
   * Defines the configuration for new instances added during scaling, including resource requirements, labels, annotations, etc. New instances are created based on the provided instance templates.
   * @return newInstances
  **/
  @jakarta.annotation.Nullable
  public List<V1alpha1ClusterSpecComponentSpecsInnerInstancesInner> getNewInstances() {
    return newInstances;
  }


  public void setNewInstances(List<V1alpha1ClusterSpecComponentSpecsInnerInstancesInner> newInstances) {
    this.newInstances = newInstances;
  }


  public V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut offlineInstancesToOnline(List<String> offlineInstancesToOnline) {
    
    this.offlineInstancesToOnline = offlineInstancesToOnline;
    return this;
  }

  public V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut addOfflineInstancesToOnlineItem(String offlineInstancesToOnlineItem) {
    if (this.offlineInstancesToOnline == null) {
      this.offlineInstancesToOnline = new ArrayList<>();
    }
    this.offlineInstancesToOnline.add(offlineInstancesToOnlineItem);
    return this;
  }

   /**
   * Specifies the instances in the offline list to bring back online.
   * @return offlineInstancesToOnline
  **/
  @jakarta.annotation.Nullable
  public List<String> getOfflineInstancesToOnline() {
    return offlineInstancesToOnline;
  }


  public void setOfflineInstancesToOnline(List<String> offlineInstancesToOnline) {
    this.offlineInstancesToOnline = offlineInstancesToOnline;
  }


  public V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut replicaChanges(Integer replicaChanges) {
    
    this.replicaChanges = replicaChanges;
    return this;
  }

   /**
   * Specifies the replica changes for the component.
   * minimum: 0
   * @return replicaChanges
  **/
  @jakarta.annotation.Nullable
  public Integer getReplicaChanges() {
    return replicaChanges;
  }


  public void setReplicaChanges(Integer replicaChanges) {
    this.replicaChanges = replicaChanges;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut v1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut = (V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut) o;
    return Objects.equals(this.instances, v1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut.instances) &&
        Objects.equals(this.newInstances, v1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut.newInstances) &&
        Objects.equals(this.offlineInstancesToOnline, v1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut.offlineInstancesToOnline) &&
        Objects.equals(this.replicaChanges, v1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut.replicaChanges);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instances, newInstances, offlineInstancesToOnline, replicaChanges);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut {\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("    newInstances: ").append(toIndentedString(newInstances)).append("\n");
    sb.append("    offlineInstancesToOnline: ").append(toIndentedString(offlineInstancesToOnline)).append("\n");
    sb.append("    replicaChanges: ").append(toIndentedString(replicaChanges)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instances");
    openapiFields.add("newInstances");
    openapiFields.add("offlineInstancesToOnline");
    openapiFields.add("replicaChanges");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut is not found in the empty JSON string", V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("instances") != null && !jsonObj.get("instances").isJsonNull()) {
        JsonArray jsonArrayinstances = jsonObj.getAsJsonArray("instances");
        if (jsonArrayinstances != null) {
          // ensure the json data is an array
          if (!jsonObj.get("instances").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `instances` to be an array in the JSON string but got `%s`", jsonObj.get("instances").toString()));
          }

          // validate the optional field `instances` (array)
          for (int i = 0; i < jsonArrayinstances.size(); i++) {
            V1alpha1OpsRequestSpecHorizontalScalingInnerScaleInInstancesInner.validateJsonObject(jsonArrayinstances.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("newInstances") != null && !jsonObj.get("newInstances").isJsonNull()) {
        JsonArray jsonArraynewInstances = jsonObj.getAsJsonArray("newInstances");
        if (jsonArraynewInstances != null) {
          // ensure the json data is an array
          if (!jsonObj.get("newInstances").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `newInstances` to be an array in the JSON string but got `%s`", jsonObj.get("newInstances").toString()));
          }

          // validate the optional field `newInstances` (array)
          for (int i = 0; i < jsonArraynewInstances.size(); i++) {
            V1alpha1ClusterSpecComponentSpecsInnerInstancesInner.validateJsonObject(jsonArraynewInstances.get(i).getAsJsonObject());
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("offlineInstancesToOnline") != null && !jsonObj.get("offlineInstancesToOnline").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `offlineInstancesToOnline` to be an array in the JSON string but got `%s`", jsonObj.get("offlineInstancesToOnline").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut.class));

       return (TypeAdapter<T>) new TypeAdapter<V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut>() {
           @Override
           public void write(JsonWriter out, V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut
  * @throws IOException if the JSON string is invalid with respect to V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut
  */
  public static V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut fromJson(String jsonString) throws IOException {
    return new JSON().getGson().fromJson(jsonString, V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut.class);
  }

 /**
  * Convert an instance of V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return new JSON().getGson().toJson(this);
  }
}

