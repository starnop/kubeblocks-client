/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.27.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubeblocks.apps.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubeblocks.apps.models.V1alpha1OpsRequestSpecCustomComponentsInner;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * Specifies a custom operation defined by OpsDefinition.
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-13T15:59:08.817252Z[Etc/UTC]")
public class V1alpha1OpsRequestSpecCustom {
  public static final String SERIALIZED_NAME_COMPONENTS = "components";
  @SerializedName(SERIALIZED_NAME_COMPONENTS)
  private List<V1alpha1OpsRequestSpecCustomComponentsInner> components = new ArrayList<>();

  public static final String SERIALIZED_NAME_MAX_CONCURRENT_COMPONENTS = "maxConcurrentComponents";
  @SerializedName(SERIALIZED_NAME_MAX_CONCURRENT_COMPONENTS)
  private Object maxConcurrentComponents;

  public static final String SERIALIZED_NAME_OPS_DEFINITION_NAME = "opsDefinitionName";
  @SerializedName(SERIALIZED_NAME_OPS_DEFINITION_NAME)
  private String opsDefinitionName;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT_NAME = "serviceAccountName";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT_NAME)
  private String serviceAccountName;

  public V1alpha1OpsRequestSpecCustom() {
  }

  public V1alpha1OpsRequestSpecCustom components(List<V1alpha1OpsRequestSpecCustomComponentsInner> components) {
    
    this.components = components;
    return this;
  }

  public V1alpha1OpsRequestSpecCustom addComponentsItem(V1alpha1OpsRequestSpecCustomComponentsInner componentsItem) {
    if (this.components == null) {
      this.components = new ArrayList<>();
    }
    this.components.add(componentsItem);
    return this;
  }

   /**
   * Specifies the components and their parameters for executing custom actions as defined in OpsDefinition. Requires at least one component.
   * @return components
  **/
  @jakarta.annotation.Nonnull
  public List<V1alpha1OpsRequestSpecCustomComponentsInner> getComponents() {
    return components;
  }


  public void setComponents(List<V1alpha1OpsRequestSpecCustomComponentsInner> components) {
    this.components = components;
  }


  public V1alpha1OpsRequestSpecCustom maxConcurrentComponents(Object maxConcurrentComponents) {
    
    this.maxConcurrentComponents = maxConcurrentComponents;
    return this;
  }

   /**
   * Specifies the maximum number of components to be operated on concurrently to mitigate performance impact on clusters with multiple components.   It accepts an absolute number (e.g., 5) or a percentage of components to execute in parallel (e.g., \&quot;10%\&quot;). Percentages are rounded up to the nearest whole number of components. For example, if \&quot;10%\&quot; results in less than one, it rounds up to 1.   When unspecified, all components are processed simultaneously by default.   Note: This feature is not implemented yet.
   * @return maxConcurrentComponents
  **/
  @jakarta.annotation.Nullable
  public Object getMaxConcurrentComponents() {
    return maxConcurrentComponents;
  }


  public void setMaxConcurrentComponents(Object maxConcurrentComponents) {
    this.maxConcurrentComponents = maxConcurrentComponents;
  }


  public V1alpha1OpsRequestSpecCustom opsDefinitionName(String opsDefinitionName) {
    
    this.opsDefinitionName = opsDefinitionName;
    return this;
  }

   /**
   * Specifies the name of the OpsDefinition.
   * @return opsDefinitionName
  **/
  @jakarta.annotation.Nonnull
  public String getOpsDefinitionName() {
    return opsDefinitionName;
  }


  public void setOpsDefinitionName(String opsDefinitionName) {
    this.opsDefinitionName = opsDefinitionName;
  }


  public V1alpha1OpsRequestSpecCustom serviceAccountName(String serviceAccountName) {
    
    this.serviceAccountName = serviceAccountName;
    return this;
  }

   /**
   * Specifies the name of the ServiceAccount to be used for executing the custom operation.
   * @return serviceAccountName
  **/
  @jakarta.annotation.Nullable
  public String getServiceAccountName() {
    return serviceAccountName;
  }


  public void setServiceAccountName(String serviceAccountName) {
    this.serviceAccountName = serviceAccountName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1OpsRequestSpecCustom v1alpha1OpsRequestSpecCustom = (V1alpha1OpsRequestSpecCustom) o;
    return Objects.equals(this.components, v1alpha1OpsRequestSpecCustom.components) &&
        Objects.equals(this.maxConcurrentComponents, v1alpha1OpsRequestSpecCustom.maxConcurrentComponents) &&
        Objects.equals(this.opsDefinitionName, v1alpha1OpsRequestSpecCustom.opsDefinitionName) &&
        Objects.equals(this.serviceAccountName, v1alpha1OpsRequestSpecCustom.serviceAccountName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(components, maxConcurrentComponents, opsDefinitionName, serviceAccountName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1OpsRequestSpecCustom {\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("    maxConcurrentComponents: ").append(toIndentedString(maxConcurrentComponents)).append("\n");
    sb.append("    opsDefinitionName: ").append(toIndentedString(opsDefinitionName)).append("\n");
    sb.append("    serviceAccountName: ").append(toIndentedString(serviceAccountName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("components");
    openapiFields.add("maxConcurrentComponents");
    openapiFields.add("opsDefinitionName");
    openapiFields.add("serviceAccountName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("components");
    openapiRequiredFields.add("opsDefinitionName");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1alpha1OpsRequestSpecCustom
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1alpha1OpsRequestSpecCustom.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1alpha1OpsRequestSpecCustom is not found in the empty JSON string", V1alpha1OpsRequestSpecCustom.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1alpha1OpsRequestSpecCustom.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1alpha1OpsRequestSpecCustom` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : V1alpha1OpsRequestSpecCustom.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("components").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `components` to be an array in the JSON string but got `%s`", jsonObj.get("components").toString()));
      }

      JsonArray jsonArraycomponents = jsonObj.getAsJsonArray("components");
      // validate the required field `components` (array)
      for (int i = 0; i < jsonArraycomponents.size(); i++) {
        V1alpha1OpsRequestSpecCustomComponentsInner.validateJsonObject(jsonArraycomponents.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("opsDefinitionName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `opsDefinitionName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("opsDefinitionName").toString()));
      }
      if ((jsonObj.get("serviceAccountName") != null && !jsonObj.get("serviceAccountName").isJsonNull()) && !jsonObj.get("serviceAccountName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceAccountName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceAccountName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1alpha1OpsRequestSpecCustom.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1alpha1OpsRequestSpecCustom' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1alpha1OpsRequestSpecCustom> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1alpha1OpsRequestSpecCustom.class));

       return (TypeAdapter<T>) new TypeAdapter<V1alpha1OpsRequestSpecCustom>() {
           @Override
           public void write(JsonWriter out, V1alpha1OpsRequestSpecCustom value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1alpha1OpsRequestSpecCustom read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1alpha1OpsRequestSpecCustom given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1alpha1OpsRequestSpecCustom
  * @throws IOException if the JSON string is invalid with respect to V1alpha1OpsRequestSpecCustom
  */
  public static V1alpha1OpsRequestSpecCustom fromJson(String jsonString) throws IOException {
    return new JSON().getGson().fromJson(jsonString, V1alpha1OpsRequestSpecCustom.class);
  }

 /**
  * Convert an instance of V1alpha1OpsRequestSpecCustom to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return new JSON().getGson().toJson(this);
  }
}

