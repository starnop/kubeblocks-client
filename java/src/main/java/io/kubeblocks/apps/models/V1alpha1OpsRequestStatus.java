/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.27.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubeblocks.apps.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubeblocks.apps.models.V1alpha1ClusterStatusConditionsInner;
import io.kubeblocks.apps.models.V1alpha1OpsRequestStatusComponentsValue;
import io.kubeblocks.apps.models.V1alpha1OpsRequestStatusLastConfiguration;
import io.kubeblocks.apps.models.V1alpha1OpsRequestStatusReconfiguringStatus;
import io.kubeblocks.apps.models.V1alpha1OpsRequestStatusReconfiguringStatusAsComponentValue;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * OpsRequestStatus represents the observed state of an OpsRequest.
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-13T15:59:08.817252Z[Etc/UTC]")
public class V1alpha1OpsRequestStatus {
  public static final String SERIALIZED_NAME_CANCEL_TIMESTAMP = "cancelTimestamp";
  @SerializedName(SERIALIZED_NAME_CANCEL_TIMESTAMP)
  private OffsetDateTime cancelTimestamp;

  public static final String SERIALIZED_NAME_CLUSTER_GENERATION = "clusterGeneration";
  @SerializedName(SERIALIZED_NAME_CLUSTER_GENERATION)
  private Long clusterGeneration;

  public static final String SERIALIZED_NAME_COMPLETION_TIMESTAMP = "completionTimestamp";
  @SerializedName(SERIALIZED_NAME_COMPLETION_TIMESTAMP)
  private OffsetDateTime completionTimestamp;

  public static final String SERIALIZED_NAME_COMPONENTS = "components";
  @SerializedName(SERIALIZED_NAME_COMPONENTS)
  private Map<String, V1alpha1OpsRequestStatusComponentsValue> components = new HashMap<>();

  public static final String SERIALIZED_NAME_CONDITIONS = "conditions";
  @SerializedName(SERIALIZED_NAME_CONDITIONS)
  private List<V1alpha1ClusterStatusConditionsInner> conditions;

  public static final String SERIALIZED_NAME_EXTRAS = "extras";
  @SerializedName(SERIALIZED_NAME_EXTRAS)
  private List<Map<String, String>> extras;

  public static final String SERIALIZED_NAME_LAST_CONFIGURATION = "lastConfiguration";
  @SerializedName(SERIALIZED_NAME_LAST_CONFIGURATION)
  private V1alpha1OpsRequestStatusLastConfiguration lastConfiguration;

  /**
   * Represents the phase of the OpsRequest. Possible values include \&quot;Pending\&quot;, \&quot;Creating\&quot;, \&quot;Running\&quot;, \&quot;Cancelling\&quot;, \&quot;Cancelled\&quot;, \&quot;Failed\&quot;, \&quot;Succeed\&quot;.
   */
  @JsonAdapter(PhaseEnum.Adapter.class)
  public enum PhaseEnum {
    PENDING("Pending"),
    
    CREATING("Creating"),
    
    RUNNING("Running"),
    
    CANCELLING("Cancelling"),
    
    CANCELLED("Cancelled"),
    
    ABORTED("Aborted"),
    
    FAILED("Failed"),
    
    SUCCEED("Succeed");

    private String value;

    PhaseEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PhaseEnum fromValue(String value) {
      for (PhaseEnum b : PhaseEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PhaseEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PhaseEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PhaseEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PhaseEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PHASE = "phase";
  @SerializedName(SERIALIZED_NAME_PHASE)
  private PhaseEnum phase;

  public static final String SERIALIZED_NAME_PROGRESS = "progress";
  @SerializedName(SERIALIZED_NAME_PROGRESS)
  private String progress;

  public static final String SERIALIZED_NAME_RECONFIGURING_STATUS = "reconfiguringStatus";
  @SerializedName(SERIALIZED_NAME_RECONFIGURING_STATUS)
  private V1alpha1OpsRequestStatusReconfiguringStatus reconfiguringStatus;

  public static final String SERIALIZED_NAME_RECONFIGURING_STATUS_AS_COMPONENT = "reconfiguringStatusAsComponent";
  @SerializedName(SERIALIZED_NAME_RECONFIGURING_STATUS_AS_COMPONENT)
  private Map<String, V1alpha1OpsRequestStatusReconfiguringStatusAsComponentValue> reconfiguringStatusAsComponent = new HashMap<>();

  public static final String SERIALIZED_NAME_START_TIMESTAMP = "startTimestamp";
  @SerializedName(SERIALIZED_NAME_START_TIMESTAMP)
  private OffsetDateTime startTimestamp;

  public V1alpha1OpsRequestStatus() {
  }

  public V1alpha1OpsRequestStatus cancelTimestamp(OffsetDateTime cancelTimestamp) {
    
    this.cancelTimestamp = cancelTimestamp;
    return this;
  }

   /**
   * Records the time when the OpsRequest was cancelled.
   * @return cancelTimestamp
  **/
  @jakarta.annotation.Nullable
  public OffsetDateTime getCancelTimestamp() {
    return cancelTimestamp;
  }


  public void setCancelTimestamp(OffsetDateTime cancelTimestamp) {
    this.cancelTimestamp = cancelTimestamp;
  }


  public V1alpha1OpsRequestStatus clusterGeneration(Long clusterGeneration) {
    
    this.clusterGeneration = clusterGeneration;
    return this;
  }

   /**
   * Records the cluster generation after the OpsRequest action has been handled.
   * @return clusterGeneration
  **/
  @jakarta.annotation.Nullable
  public Long getClusterGeneration() {
    return clusterGeneration;
  }


  public void setClusterGeneration(Long clusterGeneration) {
    this.clusterGeneration = clusterGeneration;
  }


  public V1alpha1OpsRequestStatus completionTimestamp(OffsetDateTime completionTimestamp) {
    
    this.completionTimestamp = completionTimestamp;
    return this;
  }

   /**
   * Records the time when the OpsRequest was completed.
   * @return completionTimestamp
  **/
  @jakarta.annotation.Nullable
  public OffsetDateTime getCompletionTimestamp() {
    return completionTimestamp;
  }


  public void setCompletionTimestamp(OffsetDateTime completionTimestamp) {
    this.completionTimestamp = completionTimestamp;
  }


  public V1alpha1OpsRequestStatus components(Map<String, V1alpha1OpsRequestStatusComponentsValue> components) {
    
    this.components = components;
    return this;
  }

  public V1alpha1OpsRequestStatus putComponentsItem(String key, V1alpha1OpsRequestStatusComponentsValue componentsItem) {
    if (this.components == null) {
      this.components = new HashMap<>();
    }
    this.components.put(key, componentsItem);
    return this;
  }

   /**
   * Records the status information of Components changed due to the OpsRequest.
   * @return components
  **/
  @jakarta.annotation.Nullable
  public Map<String, V1alpha1OpsRequestStatusComponentsValue> getComponents() {
    return components;
  }


  public void setComponents(Map<String, V1alpha1OpsRequestStatusComponentsValue> components) {
    this.components = components;
  }


  public V1alpha1OpsRequestStatus conditions(List<V1alpha1ClusterStatusConditionsInner> conditions) {
    
    this.conditions = conditions;
    return this;
  }

  public V1alpha1OpsRequestStatus addConditionsItem(V1alpha1ClusterStatusConditionsInner conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * Describes the detailed status of the OpsRequest. Possible condition types include \&quot;Cancelled\&quot;, \&quot;WaitForProgressing\&quot;, \&quot;Validated\&quot;, \&quot;Succeed\&quot;, \&quot;Failed\&quot;, \&quot;Restarting\&quot;, \&quot;VerticalScaling\&quot;, \&quot;HorizontalScaling\&quot;, \&quot;VolumeExpanding\&quot;, \&quot;Reconfigure\&quot;, \&quot;Switchover\&quot;, \&quot;Stopping\&quot;, \&quot;Starting\&quot;, \&quot;VersionUpgrading\&quot;, \&quot;Exposing\&quot;, \&quot;ExecuteDataScript\&quot;, \&quot;Backup\&quot;, \&quot;InstancesRebuilding\&quot;, \&quot;CustomOperation\&quot;.
   * @return conditions
  **/
  @jakarta.annotation.Nullable
  public List<V1alpha1ClusterStatusConditionsInner> getConditions() {
    return conditions;
  }


  public void setConditions(List<V1alpha1ClusterStatusConditionsInner> conditions) {
    this.conditions = conditions;
  }


  public V1alpha1OpsRequestStatus extras(List<Map<String, String>> extras) {
    
    this.extras = extras;
    return this;
  }

  public V1alpha1OpsRequestStatus addExtrasItem(Map<String, String> extrasItem) {
    if (this.extras == null) {
      this.extras = new ArrayList<>();
    }
    this.extras.add(extrasItem);
    return this;
  }

   /**
   * A collection of additional key-value pairs that provide supplementary information for the OpsRequest.
   * @return extras
  **/
  @jakarta.annotation.Nullable
  public List<Map<String, String>> getExtras() {
    return extras;
  }


  public void setExtras(List<Map<String, String>> extras) {
    this.extras = extras;
  }


  public V1alpha1OpsRequestStatus lastConfiguration(V1alpha1OpsRequestStatusLastConfiguration lastConfiguration) {
    
    this.lastConfiguration = lastConfiguration;
    return this;
  }

   /**
   * Get lastConfiguration
   * @return lastConfiguration
  **/
  @jakarta.annotation.Nullable
  public V1alpha1OpsRequestStatusLastConfiguration getLastConfiguration() {
    return lastConfiguration;
  }


  public void setLastConfiguration(V1alpha1OpsRequestStatusLastConfiguration lastConfiguration) {
    this.lastConfiguration = lastConfiguration;
  }


  public V1alpha1OpsRequestStatus phase(PhaseEnum phase) {
    
    this.phase = phase;
    return this;
  }

   /**
   * Represents the phase of the OpsRequest. Possible values include \&quot;Pending\&quot;, \&quot;Creating\&quot;, \&quot;Running\&quot;, \&quot;Cancelling\&quot;, \&quot;Cancelled\&quot;, \&quot;Failed\&quot;, \&quot;Succeed\&quot;.
   * @return phase
  **/
  @jakarta.annotation.Nullable
  public PhaseEnum getPhase() {
    return phase;
  }


  public void setPhase(PhaseEnum phase) {
    this.phase = phase;
  }


  public V1alpha1OpsRequestStatus progress(String progress) {
    
    this.progress = progress;
    return this;
  }

   /**
   * Represents the progress of the OpsRequest.
   * @return progress
  **/
  @jakarta.annotation.Nonnull
  public String getProgress() {
    return progress;
  }


  public void setProgress(String progress) {
    this.progress = progress;
  }


  public V1alpha1OpsRequestStatus reconfiguringStatus(V1alpha1OpsRequestStatusReconfiguringStatus reconfiguringStatus) {
    
    this.reconfiguringStatus = reconfiguringStatus;
    return this;
  }

   /**
   * Get reconfiguringStatus
   * @return reconfiguringStatus
  **/
  @jakarta.annotation.Nullable
  public V1alpha1OpsRequestStatusReconfiguringStatus getReconfiguringStatus() {
    return reconfiguringStatus;
  }


  public void setReconfiguringStatus(V1alpha1OpsRequestStatusReconfiguringStatus reconfiguringStatus) {
    this.reconfiguringStatus = reconfiguringStatus;
  }


  public V1alpha1OpsRequestStatus reconfiguringStatusAsComponent(Map<String, V1alpha1OpsRequestStatusReconfiguringStatusAsComponentValue> reconfiguringStatusAsComponent) {
    
    this.reconfiguringStatusAsComponent = reconfiguringStatusAsComponent;
    return this;
  }

  public V1alpha1OpsRequestStatus putReconfiguringStatusAsComponentItem(String key, V1alpha1OpsRequestStatusReconfiguringStatusAsComponentValue reconfiguringStatusAsComponentItem) {
    if (this.reconfiguringStatusAsComponent == null) {
      this.reconfiguringStatusAsComponent = new HashMap<>();
    }
    this.reconfiguringStatusAsComponent.put(key, reconfiguringStatusAsComponentItem);
    return this;
  }

   /**
   * Records the status of a reconfiguring operation if &#x60;opsRequest.spec.type&#x60; equals to \&quot;Reconfiguring\&quot;.
   * @return reconfiguringStatusAsComponent
  **/
  @jakarta.annotation.Nullable
  public Map<String, V1alpha1OpsRequestStatusReconfiguringStatusAsComponentValue> getReconfiguringStatusAsComponent() {
    return reconfiguringStatusAsComponent;
  }


  public void setReconfiguringStatusAsComponent(Map<String, V1alpha1OpsRequestStatusReconfiguringStatusAsComponentValue> reconfiguringStatusAsComponent) {
    this.reconfiguringStatusAsComponent = reconfiguringStatusAsComponent;
  }


  public V1alpha1OpsRequestStatus startTimestamp(OffsetDateTime startTimestamp) {
    
    this.startTimestamp = startTimestamp;
    return this;
  }

   /**
   * Records the time when the OpsRequest started processing.
   * @return startTimestamp
  **/
  @jakarta.annotation.Nullable
  public OffsetDateTime getStartTimestamp() {
    return startTimestamp;
  }


  public void setStartTimestamp(OffsetDateTime startTimestamp) {
    this.startTimestamp = startTimestamp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1OpsRequestStatus v1alpha1OpsRequestStatus = (V1alpha1OpsRequestStatus) o;
    return Objects.equals(this.cancelTimestamp, v1alpha1OpsRequestStatus.cancelTimestamp) &&
        Objects.equals(this.clusterGeneration, v1alpha1OpsRequestStatus.clusterGeneration) &&
        Objects.equals(this.completionTimestamp, v1alpha1OpsRequestStatus.completionTimestamp) &&
        Objects.equals(this.components, v1alpha1OpsRequestStatus.components) &&
        Objects.equals(this.conditions, v1alpha1OpsRequestStatus.conditions) &&
        Objects.equals(this.extras, v1alpha1OpsRequestStatus.extras) &&
        Objects.equals(this.lastConfiguration, v1alpha1OpsRequestStatus.lastConfiguration) &&
        Objects.equals(this.phase, v1alpha1OpsRequestStatus.phase) &&
        Objects.equals(this.progress, v1alpha1OpsRequestStatus.progress) &&
        Objects.equals(this.reconfiguringStatus, v1alpha1OpsRequestStatus.reconfiguringStatus) &&
        Objects.equals(this.reconfiguringStatusAsComponent, v1alpha1OpsRequestStatus.reconfiguringStatusAsComponent) &&
        Objects.equals(this.startTimestamp, v1alpha1OpsRequestStatus.startTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cancelTimestamp, clusterGeneration, completionTimestamp, components, conditions, extras, lastConfiguration, phase, progress, reconfiguringStatus, reconfiguringStatusAsComponent, startTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1OpsRequestStatus {\n");
    sb.append("    cancelTimestamp: ").append(toIndentedString(cancelTimestamp)).append("\n");
    sb.append("    clusterGeneration: ").append(toIndentedString(clusterGeneration)).append("\n");
    sb.append("    completionTimestamp: ").append(toIndentedString(completionTimestamp)).append("\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    extras: ").append(toIndentedString(extras)).append("\n");
    sb.append("    lastConfiguration: ").append(toIndentedString(lastConfiguration)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    reconfiguringStatus: ").append(toIndentedString(reconfiguringStatus)).append("\n");
    sb.append("    reconfiguringStatusAsComponent: ").append(toIndentedString(reconfiguringStatusAsComponent)).append("\n");
    sb.append("    startTimestamp: ").append(toIndentedString(startTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cancelTimestamp");
    openapiFields.add("clusterGeneration");
    openapiFields.add("completionTimestamp");
    openapiFields.add("components");
    openapiFields.add("conditions");
    openapiFields.add("extras");
    openapiFields.add("lastConfiguration");
    openapiFields.add("phase");
    openapiFields.add("progress");
    openapiFields.add("reconfiguringStatus");
    openapiFields.add("reconfiguringStatusAsComponent");
    openapiFields.add("startTimestamp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("progress");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1alpha1OpsRequestStatus
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1alpha1OpsRequestStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1alpha1OpsRequestStatus is not found in the empty JSON string", V1alpha1OpsRequestStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1alpha1OpsRequestStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1alpha1OpsRequestStatus` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : V1alpha1OpsRequestStatus.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("conditions") != null && !jsonObj.get("conditions").isJsonNull()) {
        JsonArray jsonArrayconditions = jsonObj.getAsJsonArray("conditions");
        if (jsonArrayconditions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("conditions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `conditions` to be an array in the JSON string but got `%s`", jsonObj.get("conditions").toString()));
          }

          // validate the optional field `conditions` (array)
          for (int i = 0; i < jsonArrayconditions.size(); i++) {
            V1alpha1ClusterStatusConditionsInner.validateJsonObject(jsonArrayconditions.get(i).getAsJsonObject());
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("extras") != null && !jsonObj.get("extras").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `extras` to be an array in the JSON string but got `%s`", jsonObj.get("extras").toString()));
      }
      // validate the optional field `lastConfiguration`
      if (jsonObj.get("lastConfiguration") != null && !jsonObj.get("lastConfiguration").isJsonNull()) {
        V1alpha1OpsRequestStatusLastConfiguration.validateJsonObject(jsonObj.getAsJsonObject("lastConfiguration"));
      }
      if ((jsonObj.get("phase") != null && !jsonObj.get("phase").isJsonNull()) && !jsonObj.get("phase").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phase` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phase").toString()));
      }
      if (!jsonObj.get("progress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `progress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("progress").toString()));
      }
      // validate the optional field `reconfiguringStatus`
      if (jsonObj.get("reconfiguringStatus") != null && !jsonObj.get("reconfiguringStatus").isJsonNull()) {
        V1alpha1OpsRequestStatusReconfiguringStatus.validateJsonObject(jsonObj.getAsJsonObject("reconfiguringStatus"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1alpha1OpsRequestStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1alpha1OpsRequestStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1alpha1OpsRequestStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1alpha1OpsRequestStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<V1alpha1OpsRequestStatus>() {
           @Override
           public void write(JsonWriter out, V1alpha1OpsRequestStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1alpha1OpsRequestStatus read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1alpha1OpsRequestStatus given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1alpha1OpsRequestStatus
  * @throws IOException if the JSON string is invalid with respect to V1alpha1OpsRequestStatus
  */
  public static V1alpha1OpsRequestStatus fromJson(String jsonString) throws IOException {
    return new JSON().getGson().fromJson(jsonString, V1alpha1OpsRequestStatus.class);
  }

 /**
  * Convert an instance of V1alpha1OpsRequestStatus to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return new JSON().getGson().toJson(this);
  }
}

