/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.27.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubeblocks.apps.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubeblocks.apps.models.V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreference;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it&#39;s a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-13T15:59:08.817252Z[Etc/UTC]")
public class V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner {
  public static final String SERIALIZED_NAME_PREFERENCE = "preference";
  @SerializedName(SERIALIZED_NAME_PREFERENCE)
  private V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreference preference;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private Integer weight;

  public V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner() {
  }

  public V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner preference(V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreference preference) {
    
    this.preference = preference;
    return this;
  }

   /**
   * Get preference
   * @return preference
  **/
  @jakarta.annotation.Nonnull
  public V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreference getPreference() {
    return preference;
  }


  public void setPreference(V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreference preference) {
    this.preference = preference;
  }


  public V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner weight(Integer weight) {
    
    this.weight = weight;
    return this;
  }

   /**
   * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
   * @return weight
  **/
  @jakarta.annotation.Nonnull
  public Integer getWeight() {
    return weight;
  }


  public void setWeight(Integer weight) {
    this.weight = weight;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner v1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner = (V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner) o;
    return Objects.equals(this.preference, v1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner.preference) &&
        Objects.equals(this.weight, v1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner.weight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(preference, weight);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner {\n");
    sb.append("    preference: ").append(toIndentedString(preference)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("preference");
    openapiFields.add("weight");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("preference");
    openapiRequiredFields.add("weight");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner is not found in the empty JSON string", V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the required field `preference`
      V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInnerPreference.validateJsonObject(jsonObj.getAsJsonObject("preference"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner.class));

       return (TypeAdapter<T>) new TypeAdapter<V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner>() {
           @Override
           public void write(JsonWriter out, V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner
  * @throws IOException if the JSON string is invalid with respect to V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner
  */
  public static V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner fromJson(String jsonString) throws IOException {
    return new JSON().getGson().fromJson(jsonString, V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner.class);
  }

 /**
  * Convert an instance of V1alpha1ClusterSpecComponentSpecsInnerInstancesInnerSchedulingPolicyAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return new JSON().getGson().toJson(this);
  }
}

