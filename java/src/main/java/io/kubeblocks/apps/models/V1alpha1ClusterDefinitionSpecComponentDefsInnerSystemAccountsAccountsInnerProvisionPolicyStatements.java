/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.27.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubeblocks.apps.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * The statement to provision an account.
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-13T15:59:08.817252Z[Etc/UTC]")
public class V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements {
  public static final String SERIALIZED_NAME_CREATION = "creation";
  @SerializedName(SERIALIZED_NAME_CREATION)
  private String creation;

  public static final String SERIALIZED_NAME_DELETION = "deletion";
  @SerializedName(SERIALIZED_NAME_DELETION)
  private String deletion;

  public static final String SERIALIZED_NAME_UPDATE = "update";
  @SerializedName(SERIALIZED_NAME_UPDATE)
  private String update;

  public V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements() {
  }

  public V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements creation(String creation) {
    
    this.creation = creation;
    return this;
  }

   /**
   * Specifies the statement required to create a new account with the necessary privileges.
   * @return creation
  **/
  @jakarta.annotation.Nonnull
  public String getCreation() {
    return creation;
  }


  public void setCreation(String creation) {
    this.creation = creation;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements deletion(String deletion) {
    
    this.deletion = deletion;
    return this;
  }

   /**
   * Defines the statement required to delete an existing account. Typically used in conjunction with the creation statement to delete an account before recreating it. For example, one might use a &#x60;drop user if exists&#x60; statement followed by a &#x60;create user&#x60; statement to ensure a fresh account.   Deprecated: This field is deprecated and the update statement should be used instead.
   * @return deletion
  **/
  @jakarta.annotation.Nullable
  public String getDeletion() {
    return deletion;
  }


  public void setDeletion(String deletion) {
    this.deletion = deletion;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements update(String update) {
    
    this.update = update;
    return this;
  }

   /**
   * Defines the statement required to update the password of an existing account.
   * @return update
  **/
  @jakarta.annotation.Nullable
  public String getUpdate() {
    return update;
  }


  public void setUpdate(String update) {
    this.update = update;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements v1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements = (V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements) o;
    return Objects.equals(this.creation, v1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements.creation) &&
        Objects.equals(this.deletion, v1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements.deletion) &&
        Objects.equals(this.update, v1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creation, deletion, update);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements {\n");
    sb.append("    creation: ").append(toIndentedString(creation)).append("\n");
    sb.append("    deletion: ").append(toIndentedString(deletion)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("creation");
    openapiFields.add("deletion");
    openapiFields.add("update");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("creation");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements is not found in the empty JSON string", V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("creation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creation").toString()));
      }
      if ((jsonObj.get("deletion") != null && !jsonObj.get("deletion").isJsonNull()) && !jsonObj.get("deletion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deletion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deletion").toString()));
      }
      if ((jsonObj.get("update") != null && !jsonObj.get("update").isJsonNull()) && !jsonObj.get("update").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `update` to be a primitive type in the JSON string but got `%s`", jsonObj.get("update").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements.class));

       return (TypeAdapter<T>) new TypeAdapter<V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements>() {
           @Override
           public void write(JsonWriter out, V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements
  * @throws IOException if the JSON string is invalid with respect to V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements
  */
  public static V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements fromJson(String jsonString) throws IOException {
    return new JSON().getGson().fromJson(jsonString, V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements.class);
  }

 /**
  * Convert an instance of V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccountsAccountsInnerProvisionPolicyStatements to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return new JSON().getGson().toJson(this);
  }
}

