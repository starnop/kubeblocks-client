/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.27.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubeblocks.apps.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerComponentDefRefInner;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerConfigSpecsInner;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerConsensusSpec;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerCustomLabelSpecsInner;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerExporter;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerHorizontalScalePolicy;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerLogConfigsInner;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerMonitor;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerPostStartSpec;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerProbes;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerReplicationSpec;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerRsmSpec;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerScriptSpecsInner;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerService;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerServiceRefDeclarationsInner;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerStatefulSpec;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerStatelessSpec;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerSwitchoverSpec;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccounts;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerVolumeProtectionSpec;
import io.kubeblocks.apps.models.V1alpha1ClusterDefinitionSpecComponentDefsInnerVolumeTypesInner;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * ClusterComponentDefinition defines a Component within a ClusterDefinition but is deprecated and has been replaced by ComponentDefinition.   Deprecated: Use ComponentDefinition instead. This type is deprecated as of version 0.8.
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-13T15:59:08.817252Z[Etc/UTC]")
public class V1alpha1ClusterDefinitionSpecComponentDefsInner {
  public static final String SERIALIZED_NAME_CHARACTER_TYPE = "characterType";
  @SerializedName(SERIALIZED_NAME_CHARACTER_TYPE)
  private String characterType;

  public static final String SERIALIZED_NAME_COMPONENT_DEF_REF = "componentDefRef";
  @SerializedName(SERIALIZED_NAME_COMPONENT_DEF_REF)
  private List<V1alpha1ClusterDefinitionSpecComponentDefsInnerComponentDefRefInner> componentDefRef;

  public static final String SERIALIZED_NAME_CONFIG_SPECS = "configSpecs";
  @SerializedName(SERIALIZED_NAME_CONFIG_SPECS)
  private List<V1alpha1ClusterDefinitionSpecComponentDefsInnerConfigSpecsInner> configSpecs;

  public static final String SERIALIZED_NAME_CONSENSUS_SPEC = "consensusSpec";
  @SerializedName(SERIALIZED_NAME_CONSENSUS_SPEC)
  private V1alpha1ClusterDefinitionSpecComponentDefsInnerConsensusSpec consensusSpec;

  public static final String SERIALIZED_NAME_CUSTOM_LABEL_SPECS = "customLabelSpecs";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LABEL_SPECS)
  private List<V1alpha1ClusterDefinitionSpecComponentDefsInnerCustomLabelSpecsInner> customLabelSpecs;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EXPORTER = "exporter";
  @SerializedName(SERIALIZED_NAME_EXPORTER)
  private V1alpha1ClusterDefinitionSpecComponentDefsInnerExporter exporter;

  public static final String SERIALIZED_NAME_HORIZONTAL_SCALE_POLICY = "horizontalScalePolicy";
  @SerializedName(SERIALIZED_NAME_HORIZONTAL_SCALE_POLICY)
  private V1alpha1ClusterDefinitionSpecComponentDefsInnerHorizontalScalePolicy horizontalScalePolicy;

  public static final String SERIALIZED_NAME_LOG_CONFIGS = "logConfigs";
  @SerializedName(SERIALIZED_NAME_LOG_CONFIGS)
  private List<V1alpha1ClusterDefinitionSpecComponentDefsInnerLogConfigsInner> logConfigs;

  public static final String SERIALIZED_NAME_MONITOR = "monitor";
  @SerializedName(SERIALIZED_NAME_MONITOR)
  private V1alpha1ClusterDefinitionSpecComponentDefsInnerMonitor monitor;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_POD_SPEC = "podSpec";
  @SerializedName(SERIALIZED_NAME_POD_SPEC)
  private Object podSpec;

  public static final String SERIALIZED_NAME_POST_START_SPEC = "postStartSpec";
  @SerializedName(SERIALIZED_NAME_POST_START_SPEC)
  private V1alpha1ClusterDefinitionSpecComponentDefsInnerPostStartSpec postStartSpec;

  public static final String SERIALIZED_NAME_PROBES = "probes";
  @SerializedName(SERIALIZED_NAME_PROBES)
  private V1alpha1ClusterDefinitionSpecComponentDefsInnerProbes probes;

  public static final String SERIALIZED_NAME_REPLICATION_SPEC = "replicationSpec";
  @SerializedName(SERIALIZED_NAME_REPLICATION_SPEC)
  private V1alpha1ClusterDefinitionSpecComponentDefsInnerReplicationSpec replicationSpec;

  public static final String SERIALIZED_NAME_RSM_SPEC = "rsmSpec";
  @SerializedName(SERIALIZED_NAME_RSM_SPEC)
  private V1alpha1ClusterDefinitionSpecComponentDefsInnerRsmSpec rsmSpec;

  public static final String SERIALIZED_NAME_SCRIPT_SPECS = "scriptSpecs";
  @SerializedName(SERIALIZED_NAME_SCRIPT_SPECS)
  private List<V1alpha1ClusterDefinitionSpecComponentDefsInnerScriptSpecsInner> scriptSpecs;

  public static final String SERIALIZED_NAME_SERVICE = "service";
  @SerializedName(SERIALIZED_NAME_SERVICE)
  private V1alpha1ClusterDefinitionSpecComponentDefsInnerService service;

  public static final String SERIALIZED_NAME_SERVICE_REF_DECLARATIONS = "serviceRefDeclarations";
  @SerializedName(SERIALIZED_NAME_SERVICE_REF_DECLARATIONS)
  private List<V1alpha1ClusterDefinitionSpecComponentDefsInnerServiceRefDeclarationsInner> serviceRefDeclarations;

  public static final String SERIALIZED_NAME_STATEFUL_SPEC = "statefulSpec";
  @SerializedName(SERIALIZED_NAME_STATEFUL_SPEC)
  private V1alpha1ClusterDefinitionSpecComponentDefsInnerStatefulSpec statefulSpec;

  public static final String SERIALIZED_NAME_STATELESS_SPEC = "statelessSpec";
  @SerializedName(SERIALIZED_NAME_STATELESS_SPEC)
  private V1alpha1ClusterDefinitionSpecComponentDefsInnerStatelessSpec statelessSpec;

  public static final String SERIALIZED_NAME_SWITCHOVER_SPEC = "switchoverSpec";
  @SerializedName(SERIALIZED_NAME_SWITCHOVER_SPEC)
  private V1alpha1ClusterDefinitionSpecComponentDefsInnerSwitchoverSpec switchoverSpec;

  public static final String SERIALIZED_NAME_SYSTEM_ACCOUNTS = "systemAccounts";
  @SerializedName(SERIALIZED_NAME_SYSTEM_ACCOUNTS)
  private V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccounts systemAccounts;

  public static final String SERIALIZED_NAME_VOLUME_PROTECTION_SPEC = "volumeProtectionSpec";
  @SerializedName(SERIALIZED_NAME_VOLUME_PROTECTION_SPEC)
  private V1alpha1ClusterDefinitionSpecComponentDefsInnerVolumeProtectionSpec volumeProtectionSpec;

  public static final String SERIALIZED_NAME_VOLUME_TYPES = "volumeTypes";
  @SerializedName(SERIALIZED_NAME_VOLUME_TYPES)
  private List<V1alpha1ClusterDefinitionSpecComponentDefsInnerVolumeTypesInner> volumeTypes;

  /**
   * Defines the type of the workload.   - &#x60;Stateless&#x60; describes stateless applications. - &#x60;Stateful&#x60; describes common stateful applications. - &#x60;Consensus&#x60; describes applications based on consensus protocols, such as raft and paxos. - &#x60;Replication&#x60; describes applications based on the primary-secondary data replication protocol.
   */
  @JsonAdapter(WorkloadTypeEnum.Adapter.class)
  public enum WorkloadTypeEnum {
    STATELESS("Stateless"),
    
    STATEFUL("Stateful"),
    
    CONSENSUS("Consensus"),
    
    REPLICATION("Replication");

    private String value;

    WorkloadTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static WorkloadTypeEnum fromValue(String value) {
      for (WorkloadTypeEnum b : WorkloadTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<WorkloadTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final WorkloadTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public WorkloadTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return WorkloadTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_WORKLOAD_TYPE = "workloadType";
  @SerializedName(SERIALIZED_NAME_WORKLOAD_TYPE)
  private WorkloadTypeEnum workloadType;

  public V1alpha1ClusterDefinitionSpecComponentDefsInner() {
  }

  public V1alpha1ClusterDefinitionSpecComponentDefsInner characterType(String characterType) {
    
    this.characterType = characterType;
    return this;
  }

   /**
   * Defines well-known database component name, such as mongos(mongodb), proxy(redis), mariadb(mysql).
   * @return characterType
  **/
  @jakarta.annotation.Nullable
  public String getCharacterType() {
    return characterType;
  }


  public void setCharacterType(String characterType) {
    this.characterType = characterType;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner componentDefRef(List<V1alpha1ClusterDefinitionSpecComponentDefsInnerComponentDefRefInner> componentDefRef) {
    
    this.componentDefRef = componentDefRef;
    return this;
  }

  public V1alpha1ClusterDefinitionSpecComponentDefsInner addComponentDefRefItem(V1alpha1ClusterDefinitionSpecComponentDefsInnerComponentDefRefInner componentDefRefItem) {
    if (this.componentDefRef == null) {
      this.componentDefRef = new ArrayList<>();
    }
    this.componentDefRef.add(componentDefRefItem);
    return this;
  }

   /**
   * Used to inject values from other components into the current component. Values will be saved and updated in a configmap and mounted to the current component.
   * @return componentDefRef
  **/
  @jakarta.annotation.Nullable
  public List<V1alpha1ClusterDefinitionSpecComponentDefsInnerComponentDefRefInner> getComponentDefRef() {
    return componentDefRef;
  }


  public void setComponentDefRef(List<V1alpha1ClusterDefinitionSpecComponentDefsInnerComponentDefRefInner> componentDefRef) {
    this.componentDefRef = componentDefRef;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner configSpecs(List<V1alpha1ClusterDefinitionSpecComponentDefsInnerConfigSpecsInner> configSpecs) {
    
    this.configSpecs = configSpecs;
    return this;
  }

  public V1alpha1ClusterDefinitionSpecComponentDefsInner addConfigSpecsItem(V1alpha1ClusterDefinitionSpecComponentDefsInnerConfigSpecsInner configSpecsItem) {
    if (this.configSpecs == null) {
      this.configSpecs = new ArrayList<>();
    }
    this.configSpecs.add(configSpecsItem);
    return this;
  }

   /**
   * Defines the template of configurations.
   * @return configSpecs
  **/
  @jakarta.annotation.Nullable
  public List<V1alpha1ClusterDefinitionSpecComponentDefsInnerConfigSpecsInner> getConfigSpecs() {
    return configSpecs;
  }


  public void setConfigSpecs(List<V1alpha1ClusterDefinitionSpecComponentDefsInnerConfigSpecsInner> configSpecs) {
    this.configSpecs = configSpecs;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner consensusSpec(V1alpha1ClusterDefinitionSpecComponentDefsInnerConsensusSpec consensusSpec) {
    
    this.consensusSpec = consensusSpec;
    return this;
  }

   /**
   * Get consensusSpec
   * @return consensusSpec
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ClusterDefinitionSpecComponentDefsInnerConsensusSpec getConsensusSpec() {
    return consensusSpec;
  }


  public void setConsensusSpec(V1alpha1ClusterDefinitionSpecComponentDefsInnerConsensusSpec consensusSpec) {
    this.consensusSpec = consensusSpec;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner customLabelSpecs(List<V1alpha1ClusterDefinitionSpecComponentDefsInnerCustomLabelSpecsInner> customLabelSpecs) {
    
    this.customLabelSpecs = customLabelSpecs;
    return this;
  }

  public V1alpha1ClusterDefinitionSpecComponentDefsInner addCustomLabelSpecsItem(V1alpha1ClusterDefinitionSpecComponentDefsInnerCustomLabelSpecsInner customLabelSpecsItem) {
    if (this.customLabelSpecs == null) {
      this.customLabelSpecs = new ArrayList<>();
    }
    this.customLabelSpecs.add(customLabelSpecsItem);
    return this;
  }

   /**
   * Used for custom label tags which you want to add to the component resources.
   * @return customLabelSpecs
  **/
  @jakarta.annotation.Nullable
  public List<V1alpha1ClusterDefinitionSpecComponentDefsInnerCustomLabelSpecsInner> getCustomLabelSpecs() {
    return customLabelSpecs;
  }


  public void setCustomLabelSpecs(List<V1alpha1ClusterDefinitionSpecComponentDefsInnerCustomLabelSpecsInner> customLabelSpecs) {
    this.customLabelSpecs = customLabelSpecs;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the component definition.
   * @return description
  **/
  @jakarta.annotation.Nullable
  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner exporter(V1alpha1ClusterDefinitionSpecComponentDefsInnerExporter exporter) {
    
    this.exporter = exporter;
    return this;
  }

   /**
   * Get exporter
   * @return exporter
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ClusterDefinitionSpecComponentDefsInnerExporter getExporter() {
    return exporter;
  }


  public void setExporter(V1alpha1ClusterDefinitionSpecComponentDefsInnerExporter exporter) {
    this.exporter = exporter;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner horizontalScalePolicy(V1alpha1ClusterDefinitionSpecComponentDefsInnerHorizontalScalePolicy horizontalScalePolicy) {
    
    this.horizontalScalePolicy = horizontalScalePolicy;
    return this;
  }

   /**
   * Get horizontalScalePolicy
   * @return horizontalScalePolicy
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ClusterDefinitionSpecComponentDefsInnerHorizontalScalePolicy getHorizontalScalePolicy() {
    return horizontalScalePolicy;
  }


  public void setHorizontalScalePolicy(V1alpha1ClusterDefinitionSpecComponentDefsInnerHorizontalScalePolicy horizontalScalePolicy) {
    this.horizontalScalePolicy = horizontalScalePolicy;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner logConfigs(List<V1alpha1ClusterDefinitionSpecComponentDefsInnerLogConfigsInner> logConfigs) {
    
    this.logConfigs = logConfigs;
    return this;
  }

  public V1alpha1ClusterDefinitionSpecComponentDefsInner addLogConfigsItem(V1alpha1ClusterDefinitionSpecComponentDefsInnerLogConfigsInner logConfigsItem) {
    if (this.logConfigs == null) {
      this.logConfigs = new ArrayList<>();
    }
    this.logConfigs.add(logConfigsItem);
    return this;
  }

   /**
   * Specify the logging files which can be observed and configured by cluster users.
   * @return logConfigs
  **/
  @jakarta.annotation.Nullable
  public List<V1alpha1ClusterDefinitionSpecComponentDefsInnerLogConfigsInner> getLogConfigs() {
    return logConfigs;
  }


  public void setLogConfigs(List<V1alpha1ClusterDefinitionSpecComponentDefsInnerLogConfigsInner> logConfigs) {
    this.logConfigs = logConfigs;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner monitor(V1alpha1ClusterDefinitionSpecComponentDefsInnerMonitor monitor) {
    
    this.monitor = monitor;
    return this;
  }

   /**
   * Get monitor
   * @return monitor
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ClusterDefinitionSpecComponentDefsInnerMonitor getMonitor() {
    return monitor;
  }


  public void setMonitor(V1alpha1ClusterDefinitionSpecComponentDefsInnerMonitor monitor) {
    this.monitor = monitor;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * This name could be used as default name of &#x60;cluster.spec.componentSpecs.name&#x60;, and needs to conform with same validation rules as &#x60;cluster.spec.componentSpecs.name&#x60;, currently complying with IANA Service Naming rule. This name will apply to cluster objects as the value of label \&quot;apps.kubeblocks.io/component-name\&quot;.
   * @return name
  **/
  @jakarta.annotation.Nonnull
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner podSpec(Object podSpec) {
    
    this.podSpec = podSpec;
    return this;
  }

   /**
   * Defines the pod spec template of component.
   * @return podSpec
  **/
  @jakarta.annotation.Nullable
  public Object getPodSpec() {
    return podSpec;
  }


  public void setPodSpec(Object podSpec) {
    this.podSpec = podSpec;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner postStartSpec(V1alpha1ClusterDefinitionSpecComponentDefsInnerPostStartSpec postStartSpec) {
    
    this.postStartSpec = postStartSpec;
    return this;
  }

   /**
   * Get postStartSpec
   * @return postStartSpec
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ClusterDefinitionSpecComponentDefsInnerPostStartSpec getPostStartSpec() {
    return postStartSpec;
  }


  public void setPostStartSpec(V1alpha1ClusterDefinitionSpecComponentDefsInnerPostStartSpec postStartSpec) {
    this.postStartSpec = postStartSpec;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner probes(V1alpha1ClusterDefinitionSpecComponentDefsInnerProbes probes) {
    
    this.probes = probes;
    return this;
  }

   /**
   * Get probes
   * @return probes
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ClusterDefinitionSpecComponentDefsInnerProbes getProbes() {
    return probes;
  }


  public void setProbes(V1alpha1ClusterDefinitionSpecComponentDefsInnerProbes probes) {
    this.probes = probes;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner replicationSpec(V1alpha1ClusterDefinitionSpecComponentDefsInnerReplicationSpec replicationSpec) {
    
    this.replicationSpec = replicationSpec;
    return this;
  }

   /**
   * Get replicationSpec
   * @return replicationSpec
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ClusterDefinitionSpecComponentDefsInnerReplicationSpec getReplicationSpec() {
    return replicationSpec;
  }


  public void setReplicationSpec(V1alpha1ClusterDefinitionSpecComponentDefsInnerReplicationSpec replicationSpec) {
    this.replicationSpec = replicationSpec;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner rsmSpec(V1alpha1ClusterDefinitionSpecComponentDefsInnerRsmSpec rsmSpec) {
    
    this.rsmSpec = rsmSpec;
    return this;
  }

   /**
   * Get rsmSpec
   * @return rsmSpec
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ClusterDefinitionSpecComponentDefsInnerRsmSpec getRsmSpec() {
    return rsmSpec;
  }


  public void setRsmSpec(V1alpha1ClusterDefinitionSpecComponentDefsInnerRsmSpec rsmSpec) {
    this.rsmSpec = rsmSpec;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner scriptSpecs(List<V1alpha1ClusterDefinitionSpecComponentDefsInnerScriptSpecsInner> scriptSpecs) {
    
    this.scriptSpecs = scriptSpecs;
    return this;
  }

  public V1alpha1ClusterDefinitionSpecComponentDefsInner addScriptSpecsItem(V1alpha1ClusterDefinitionSpecComponentDefsInnerScriptSpecsInner scriptSpecsItem) {
    if (this.scriptSpecs == null) {
      this.scriptSpecs = new ArrayList<>();
    }
    this.scriptSpecs.add(scriptSpecsItem);
    return this;
  }

   /**
   * Defines the template of scripts.
   * @return scriptSpecs
  **/
  @jakarta.annotation.Nullable
  public List<V1alpha1ClusterDefinitionSpecComponentDefsInnerScriptSpecsInner> getScriptSpecs() {
    return scriptSpecs;
  }


  public void setScriptSpecs(List<V1alpha1ClusterDefinitionSpecComponentDefsInnerScriptSpecsInner> scriptSpecs) {
    this.scriptSpecs = scriptSpecs;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner service(V1alpha1ClusterDefinitionSpecComponentDefsInnerService service) {
    
    this.service = service;
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ClusterDefinitionSpecComponentDefsInnerService getService() {
    return service;
  }


  public void setService(V1alpha1ClusterDefinitionSpecComponentDefsInnerService service) {
    this.service = service;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner serviceRefDeclarations(List<V1alpha1ClusterDefinitionSpecComponentDefsInnerServiceRefDeclarationsInner> serviceRefDeclarations) {
    
    this.serviceRefDeclarations = serviceRefDeclarations;
    return this;
  }

  public V1alpha1ClusterDefinitionSpecComponentDefsInner addServiceRefDeclarationsItem(V1alpha1ClusterDefinitionSpecComponentDefsInnerServiceRefDeclarationsInner serviceRefDeclarationsItem) {
    if (this.serviceRefDeclarations == null) {
      this.serviceRefDeclarations = new ArrayList<>();
    }
    this.serviceRefDeclarations.add(serviceRefDeclarationsItem);
    return this;
  }

   /**
   * Used to declare the service reference of the current component.
   * @return serviceRefDeclarations
  **/
  @jakarta.annotation.Nullable
  public List<V1alpha1ClusterDefinitionSpecComponentDefsInnerServiceRefDeclarationsInner> getServiceRefDeclarations() {
    return serviceRefDeclarations;
  }


  public void setServiceRefDeclarations(List<V1alpha1ClusterDefinitionSpecComponentDefsInnerServiceRefDeclarationsInner> serviceRefDeclarations) {
    this.serviceRefDeclarations = serviceRefDeclarations;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner statefulSpec(V1alpha1ClusterDefinitionSpecComponentDefsInnerStatefulSpec statefulSpec) {
    
    this.statefulSpec = statefulSpec;
    return this;
  }

   /**
   * Get statefulSpec
   * @return statefulSpec
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ClusterDefinitionSpecComponentDefsInnerStatefulSpec getStatefulSpec() {
    return statefulSpec;
  }


  public void setStatefulSpec(V1alpha1ClusterDefinitionSpecComponentDefsInnerStatefulSpec statefulSpec) {
    this.statefulSpec = statefulSpec;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner statelessSpec(V1alpha1ClusterDefinitionSpecComponentDefsInnerStatelessSpec statelessSpec) {
    
    this.statelessSpec = statelessSpec;
    return this;
  }

   /**
   * Get statelessSpec
   * @return statelessSpec
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ClusterDefinitionSpecComponentDefsInnerStatelessSpec getStatelessSpec() {
    return statelessSpec;
  }


  public void setStatelessSpec(V1alpha1ClusterDefinitionSpecComponentDefsInnerStatelessSpec statelessSpec) {
    this.statelessSpec = statelessSpec;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner switchoverSpec(V1alpha1ClusterDefinitionSpecComponentDefsInnerSwitchoverSpec switchoverSpec) {
    
    this.switchoverSpec = switchoverSpec;
    return this;
  }

   /**
   * Get switchoverSpec
   * @return switchoverSpec
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ClusterDefinitionSpecComponentDefsInnerSwitchoverSpec getSwitchoverSpec() {
    return switchoverSpec;
  }


  public void setSwitchoverSpec(V1alpha1ClusterDefinitionSpecComponentDefsInnerSwitchoverSpec switchoverSpec) {
    this.switchoverSpec = switchoverSpec;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner systemAccounts(V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccounts systemAccounts) {
    
    this.systemAccounts = systemAccounts;
    return this;
  }

   /**
   * Get systemAccounts
   * @return systemAccounts
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccounts getSystemAccounts() {
    return systemAccounts;
  }


  public void setSystemAccounts(V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccounts systemAccounts) {
    this.systemAccounts = systemAccounts;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner volumeProtectionSpec(V1alpha1ClusterDefinitionSpecComponentDefsInnerVolumeProtectionSpec volumeProtectionSpec) {
    
    this.volumeProtectionSpec = volumeProtectionSpec;
    return this;
  }

   /**
   * Get volumeProtectionSpec
   * @return volumeProtectionSpec
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ClusterDefinitionSpecComponentDefsInnerVolumeProtectionSpec getVolumeProtectionSpec() {
    return volumeProtectionSpec;
  }


  public void setVolumeProtectionSpec(V1alpha1ClusterDefinitionSpecComponentDefsInnerVolumeProtectionSpec volumeProtectionSpec) {
    this.volumeProtectionSpec = volumeProtectionSpec;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner volumeTypes(List<V1alpha1ClusterDefinitionSpecComponentDefsInnerVolumeTypesInner> volumeTypes) {
    
    this.volumeTypes = volumeTypes;
    return this;
  }

  public V1alpha1ClusterDefinitionSpecComponentDefsInner addVolumeTypesItem(V1alpha1ClusterDefinitionSpecComponentDefsInnerVolumeTypesInner volumeTypesItem) {
    if (this.volumeTypes == null) {
      this.volumeTypes = new ArrayList<>();
    }
    this.volumeTypes.add(volumeTypesItem);
    return this;
  }

   /**
   * Used to describe the purpose of the volumes mapping the name of the VolumeMounts in the PodSpec.Container field, such as data volume, log volume, etc. When backing up the volume, the volume can be correctly backed up according to the volumeType.   For example:   - &#x60;name: data, type: data&#x60; means that the volume named &#x60;data&#x60; is used to store &#x60;data&#x60;. - &#x60;name: binlog, type: log&#x60; means that the volume named &#x60;binlog&#x60; is used to store &#x60;log&#x60;.   NOTE: When volumeTypes is not defined, the backup function will not be supported, even if a persistent volume has been specified.
   * @return volumeTypes
  **/
  @jakarta.annotation.Nullable
  public List<V1alpha1ClusterDefinitionSpecComponentDefsInnerVolumeTypesInner> getVolumeTypes() {
    return volumeTypes;
  }


  public void setVolumeTypes(List<V1alpha1ClusterDefinitionSpecComponentDefsInnerVolumeTypesInner> volumeTypes) {
    this.volumeTypes = volumeTypes;
  }


  public V1alpha1ClusterDefinitionSpecComponentDefsInner workloadType(WorkloadTypeEnum workloadType) {
    
    this.workloadType = workloadType;
    return this;
  }

   /**
   * Defines the type of the workload.   - &#x60;Stateless&#x60; describes stateless applications. - &#x60;Stateful&#x60; describes common stateful applications. - &#x60;Consensus&#x60; describes applications based on consensus protocols, such as raft and paxos. - &#x60;Replication&#x60; describes applications based on the primary-secondary data replication protocol.
   * @return workloadType
  **/
  @jakarta.annotation.Nonnull
  public WorkloadTypeEnum getWorkloadType() {
    return workloadType;
  }


  public void setWorkloadType(WorkloadTypeEnum workloadType) {
    this.workloadType = workloadType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1ClusterDefinitionSpecComponentDefsInner v1alpha1ClusterDefinitionSpecComponentDefsInner = (V1alpha1ClusterDefinitionSpecComponentDefsInner) o;
    return Objects.equals(this.characterType, v1alpha1ClusterDefinitionSpecComponentDefsInner.characterType) &&
        Objects.equals(this.componentDefRef, v1alpha1ClusterDefinitionSpecComponentDefsInner.componentDefRef) &&
        Objects.equals(this.configSpecs, v1alpha1ClusterDefinitionSpecComponentDefsInner.configSpecs) &&
        Objects.equals(this.consensusSpec, v1alpha1ClusterDefinitionSpecComponentDefsInner.consensusSpec) &&
        Objects.equals(this.customLabelSpecs, v1alpha1ClusterDefinitionSpecComponentDefsInner.customLabelSpecs) &&
        Objects.equals(this.description, v1alpha1ClusterDefinitionSpecComponentDefsInner.description) &&
        Objects.equals(this.exporter, v1alpha1ClusterDefinitionSpecComponentDefsInner.exporter) &&
        Objects.equals(this.horizontalScalePolicy, v1alpha1ClusterDefinitionSpecComponentDefsInner.horizontalScalePolicy) &&
        Objects.equals(this.logConfigs, v1alpha1ClusterDefinitionSpecComponentDefsInner.logConfigs) &&
        Objects.equals(this.monitor, v1alpha1ClusterDefinitionSpecComponentDefsInner.monitor) &&
        Objects.equals(this.name, v1alpha1ClusterDefinitionSpecComponentDefsInner.name) &&
        Objects.equals(this.podSpec, v1alpha1ClusterDefinitionSpecComponentDefsInner.podSpec) &&
        Objects.equals(this.postStartSpec, v1alpha1ClusterDefinitionSpecComponentDefsInner.postStartSpec) &&
        Objects.equals(this.probes, v1alpha1ClusterDefinitionSpecComponentDefsInner.probes) &&
        Objects.equals(this.replicationSpec, v1alpha1ClusterDefinitionSpecComponentDefsInner.replicationSpec) &&
        Objects.equals(this.rsmSpec, v1alpha1ClusterDefinitionSpecComponentDefsInner.rsmSpec) &&
        Objects.equals(this.scriptSpecs, v1alpha1ClusterDefinitionSpecComponentDefsInner.scriptSpecs) &&
        Objects.equals(this.service, v1alpha1ClusterDefinitionSpecComponentDefsInner.service) &&
        Objects.equals(this.serviceRefDeclarations, v1alpha1ClusterDefinitionSpecComponentDefsInner.serviceRefDeclarations) &&
        Objects.equals(this.statefulSpec, v1alpha1ClusterDefinitionSpecComponentDefsInner.statefulSpec) &&
        Objects.equals(this.statelessSpec, v1alpha1ClusterDefinitionSpecComponentDefsInner.statelessSpec) &&
        Objects.equals(this.switchoverSpec, v1alpha1ClusterDefinitionSpecComponentDefsInner.switchoverSpec) &&
        Objects.equals(this.systemAccounts, v1alpha1ClusterDefinitionSpecComponentDefsInner.systemAccounts) &&
        Objects.equals(this.volumeProtectionSpec, v1alpha1ClusterDefinitionSpecComponentDefsInner.volumeProtectionSpec) &&
        Objects.equals(this.volumeTypes, v1alpha1ClusterDefinitionSpecComponentDefsInner.volumeTypes) &&
        Objects.equals(this.workloadType, v1alpha1ClusterDefinitionSpecComponentDefsInner.workloadType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(characterType, componentDefRef, configSpecs, consensusSpec, customLabelSpecs, description, exporter, horizontalScalePolicy, logConfigs, monitor, name, podSpec, postStartSpec, probes, replicationSpec, rsmSpec, scriptSpecs, service, serviceRefDeclarations, statefulSpec, statelessSpec, switchoverSpec, systemAccounts, volumeProtectionSpec, volumeTypes, workloadType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1ClusterDefinitionSpecComponentDefsInner {\n");
    sb.append("    characterType: ").append(toIndentedString(characterType)).append("\n");
    sb.append("    componentDefRef: ").append(toIndentedString(componentDefRef)).append("\n");
    sb.append("    configSpecs: ").append(toIndentedString(configSpecs)).append("\n");
    sb.append("    consensusSpec: ").append(toIndentedString(consensusSpec)).append("\n");
    sb.append("    customLabelSpecs: ").append(toIndentedString(customLabelSpecs)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    exporter: ").append(toIndentedString(exporter)).append("\n");
    sb.append("    horizontalScalePolicy: ").append(toIndentedString(horizontalScalePolicy)).append("\n");
    sb.append("    logConfigs: ").append(toIndentedString(logConfigs)).append("\n");
    sb.append("    monitor: ").append(toIndentedString(monitor)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    podSpec: ").append(toIndentedString(podSpec)).append("\n");
    sb.append("    postStartSpec: ").append(toIndentedString(postStartSpec)).append("\n");
    sb.append("    probes: ").append(toIndentedString(probes)).append("\n");
    sb.append("    replicationSpec: ").append(toIndentedString(replicationSpec)).append("\n");
    sb.append("    rsmSpec: ").append(toIndentedString(rsmSpec)).append("\n");
    sb.append("    scriptSpecs: ").append(toIndentedString(scriptSpecs)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    serviceRefDeclarations: ").append(toIndentedString(serviceRefDeclarations)).append("\n");
    sb.append("    statefulSpec: ").append(toIndentedString(statefulSpec)).append("\n");
    sb.append("    statelessSpec: ").append(toIndentedString(statelessSpec)).append("\n");
    sb.append("    switchoverSpec: ").append(toIndentedString(switchoverSpec)).append("\n");
    sb.append("    systemAccounts: ").append(toIndentedString(systemAccounts)).append("\n");
    sb.append("    volumeProtectionSpec: ").append(toIndentedString(volumeProtectionSpec)).append("\n");
    sb.append("    volumeTypes: ").append(toIndentedString(volumeTypes)).append("\n");
    sb.append("    workloadType: ").append(toIndentedString(workloadType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("characterType");
    openapiFields.add("componentDefRef");
    openapiFields.add("configSpecs");
    openapiFields.add("consensusSpec");
    openapiFields.add("customLabelSpecs");
    openapiFields.add("description");
    openapiFields.add("exporter");
    openapiFields.add("horizontalScalePolicy");
    openapiFields.add("logConfigs");
    openapiFields.add("monitor");
    openapiFields.add("name");
    openapiFields.add("podSpec");
    openapiFields.add("postStartSpec");
    openapiFields.add("probes");
    openapiFields.add("replicationSpec");
    openapiFields.add("rsmSpec");
    openapiFields.add("scriptSpecs");
    openapiFields.add("service");
    openapiFields.add("serviceRefDeclarations");
    openapiFields.add("statefulSpec");
    openapiFields.add("statelessSpec");
    openapiFields.add("switchoverSpec");
    openapiFields.add("systemAccounts");
    openapiFields.add("volumeProtectionSpec");
    openapiFields.add("volumeTypes");
    openapiFields.add("workloadType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("workloadType");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1alpha1ClusterDefinitionSpecComponentDefsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1alpha1ClusterDefinitionSpecComponentDefsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1alpha1ClusterDefinitionSpecComponentDefsInner is not found in the empty JSON string", V1alpha1ClusterDefinitionSpecComponentDefsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1alpha1ClusterDefinitionSpecComponentDefsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1alpha1ClusterDefinitionSpecComponentDefsInner` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : V1alpha1ClusterDefinitionSpecComponentDefsInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("characterType") != null && !jsonObj.get("characterType").isJsonNull()) && !jsonObj.get("characterType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `characterType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("characterType").toString()));
      }
      if (jsonObj.get("componentDefRef") != null && !jsonObj.get("componentDefRef").isJsonNull()) {
        JsonArray jsonArraycomponentDefRef = jsonObj.getAsJsonArray("componentDefRef");
        if (jsonArraycomponentDefRef != null) {
          // ensure the json data is an array
          if (!jsonObj.get("componentDefRef").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `componentDefRef` to be an array in the JSON string but got `%s`", jsonObj.get("componentDefRef").toString()));
          }

          // validate the optional field `componentDefRef` (array)
          for (int i = 0; i < jsonArraycomponentDefRef.size(); i++) {
            V1alpha1ClusterDefinitionSpecComponentDefsInnerComponentDefRefInner.validateJsonObject(jsonArraycomponentDefRef.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("configSpecs") != null && !jsonObj.get("configSpecs").isJsonNull()) {
        JsonArray jsonArrayconfigSpecs = jsonObj.getAsJsonArray("configSpecs");
        if (jsonArrayconfigSpecs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("configSpecs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `configSpecs` to be an array in the JSON string but got `%s`", jsonObj.get("configSpecs").toString()));
          }

          // validate the optional field `configSpecs` (array)
          for (int i = 0; i < jsonArrayconfigSpecs.size(); i++) {
            V1alpha1ClusterDefinitionSpecComponentDefsInnerConfigSpecsInner.validateJsonObject(jsonArrayconfigSpecs.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `consensusSpec`
      if (jsonObj.get("consensusSpec") != null && !jsonObj.get("consensusSpec").isJsonNull()) {
        V1alpha1ClusterDefinitionSpecComponentDefsInnerConsensusSpec.validateJsonObject(jsonObj.getAsJsonObject("consensusSpec"));
      }
      if (jsonObj.get("customLabelSpecs") != null && !jsonObj.get("customLabelSpecs").isJsonNull()) {
        JsonArray jsonArraycustomLabelSpecs = jsonObj.getAsJsonArray("customLabelSpecs");
        if (jsonArraycustomLabelSpecs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customLabelSpecs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customLabelSpecs` to be an array in the JSON string but got `%s`", jsonObj.get("customLabelSpecs").toString()));
          }

          // validate the optional field `customLabelSpecs` (array)
          for (int i = 0; i < jsonArraycustomLabelSpecs.size(); i++) {
            V1alpha1ClusterDefinitionSpecComponentDefsInnerCustomLabelSpecsInner.validateJsonObject(jsonArraycustomLabelSpecs.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `exporter`
      if (jsonObj.get("exporter") != null && !jsonObj.get("exporter").isJsonNull()) {
        V1alpha1ClusterDefinitionSpecComponentDefsInnerExporter.validateJsonObject(jsonObj.getAsJsonObject("exporter"));
      }
      // validate the optional field `horizontalScalePolicy`
      if (jsonObj.get("horizontalScalePolicy") != null && !jsonObj.get("horizontalScalePolicy").isJsonNull()) {
        V1alpha1ClusterDefinitionSpecComponentDefsInnerHorizontalScalePolicy.validateJsonObject(jsonObj.getAsJsonObject("horizontalScalePolicy"));
      }
      if (jsonObj.get("logConfigs") != null && !jsonObj.get("logConfigs").isJsonNull()) {
        JsonArray jsonArraylogConfigs = jsonObj.getAsJsonArray("logConfigs");
        if (jsonArraylogConfigs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("logConfigs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `logConfigs` to be an array in the JSON string but got `%s`", jsonObj.get("logConfigs").toString()));
          }

          // validate the optional field `logConfigs` (array)
          for (int i = 0; i < jsonArraylogConfigs.size(); i++) {
            V1alpha1ClusterDefinitionSpecComponentDefsInnerLogConfigsInner.validateJsonObject(jsonArraylogConfigs.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `monitor`
      if (jsonObj.get("monitor") != null && !jsonObj.get("monitor").isJsonNull()) {
        V1alpha1ClusterDefinitionSpecComponentDefsInnerMonitor.validateJsonObject(jsonObj.getAsJsonObject("monitor"));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `postStartSpec`
      if (jsonObj.get("postStartSpec") != null && !jsonObj.get("postStartSpec").isJsonNull()) {
        V1alpha1ClusterDefinitionSpecComponentDefsInnerPostStartSpec.validateJsonObject(jsonObj.getAsJsonObject("postStartSpec"));
      }
      // validate the optional field `probes`
      if (jsonObj.get("probes") != null && !jsonObj.get("probes").isJsonNull()) {
        V1alpha1ClusterDefinitionSpecComponentDefsInnerProbes.validateJsonObject(jsonObj.getAsJsonObject("probes"));
      }
      // validate the optional field `replicationSpec`
      if (jsonObj.get("replicationSpec") != null && !jsonObj.get("replicationSpec").isJsonNull()) {
        V1alpha1ClusterDefinitionSpecComponentDefsInnerReplicationSpec.validateJsonObject(jsonObj.getAsJsonObject("replicationSpec"));
      }
      // validate the optional field `rsmSpec`
      if (jsonObj.get("rsmSpec") != null && !jsonObj.get("rsmSpec").isJsonNull()) {
        V1alpha1ClusterDefinitionSpecComponentDefsInnerRsmSpec.validateJsonObject(jsonObj.getAsJsonObject("rsmSpec"));
      }
      if (jsonObj.get("scriptSpecs") != null && !jsonObj.get("scriptSpecs").isJsonNull()) {
        JsonArray jsonArrayscriptSpecs = jsonObj.getAsJsonArray("scriptSpecs");
        if (jsonArrayscriptSpecs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("scriptSpecs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `scriptSpecs` to be an array in the JSON string but got `%s`", jsonObj.get("scriptSpecs").toString()));
          }

          // validate the optional field `scriptSpecs` (array)
          for (int i = 0; i < jsonArrayscriptSpecs.size(); i++) {
            V1alpha1ClusterDefinitionSpecComponentDefsInnerScriptSpecsInner.validateJsonObject(jsonArrayscriptSpecs.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `service`
      if (jsonObj.get("service") != null && !jsonObj.get("service").isJsonNull()) {
        V1alpha1ClusterDefinitionSpecComponentDefsInnerService.validateJsonObject(jsonObj.getAsJsonObject("service"));
      }
      if (jsonObj.get("serviceRefDeclarations") != null && !jsonObj.get("serviceRefDeclarations").isJsonNull()) {
        JsonArray jsonArrayserviceRefDeclarations = jsonObj.getAsJsonArray("serviceRefDeclarations");
        if (jsonArrayserviceRefDeclarations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("serviceRefDeclarations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `serviceRefDeclarations` to be an array in the JSON string but got `%s`", jsonObj.get("serviceRefDeclarations").toString()));
          }

          // validate the optional field `serviceRefDeclarations` (array)
          for (int i = 0; i < jsonArrayserviceRefDeclarations.size(); i++) {
            V1alpha1ClusterDefinitionSpecComponentDefsInnerServiceRefDeclarationsInner.validateJsonObject(jsonArrayserviceRefDeclarations.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `statefulSpec`
      if (jsonObj.get("statefulSpec") != null && !jsonObj.get("statefulSpec").isJsonNull()) {
        V1alpha1ClusterDefinitionSpecComponentDefsInnerStatefulSpec.validateJsonObject(jsonObj.getAsJsonObject("statefulSpec"));
      }
      // validate the optional field `statelessSpec`
      if (jsonObj.get("statelessSpec") != null && !jsonObj.get("statelessSpec").isJsonNull()) {
        V1alpha1ClusterDefinitionSpecComponentDefsInnerStatelessSpec.validateJsonObject(jsonObj.getAsJsonObject("statelessSpec"));
      }
      // validate the optional field `switchoverSpec`
      if (jsonObj.get("switchoverSpec") != null && !jsonObj.get("switchoverSpec").isJsonNull()) {
        V1alpha1ClusterDefinitionSpecComponentDefsInnerSwitchoverSpec.validateJsonObject(jsonObj.getAsJsonObject("switchoverSpec"));
      }
      // validate the optional field `systemAccounts`
      if (jsonObj.get("systemAccounts") != null && !jsonObj.get("systemAccounts").isJsonNull()) {
        V1alpha1ClusterDefinitionSpecComponentDefsInnerSystemAccounts.validateJsonObject(jsonObj.getAsJsonObject("systemAccounts"));
      }
      // validate the optional field `volumeProtectionSpec`
      if (jsonObj.get("volumeProtectionSpec") != null && !jsonObj.get("volumeProtectionSpec").isJsonNull()) {
        V1alpha1ClusterDefinitionSpecComponentDefsInnerVolumeProtectionSpec.validateJsonObject(jsonObj.getAsJsonObject("volumeProtectionSpec"));
      }
      if (jsonObj.get("volumeTypes") != null && !jsonObj.get("volumeTypes").isJsonNull()) {
        JsonArray jsonArrayvolumeTypes = jsonObj.getAsJsonArray("volumeTypes");
        if (jsonArrayvolumeTypes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("volumeTypes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `volumeTypes` to be an array in the JSON string but got `%s`", jsonObj.get("volumeTypes").toString()));
          }

          // validate the optional field `volumeTypes` (array)
          for (int i = 0; i < jsonArrayvolumeTypes.size(); i++) {
            V1alpha1ClusterDefinitionSpecComponentDefsInnerVolumeTypesInner.validateJsonObject(jsonArrayvolumeTypes.get(i).getAsJsonObject());
          };
        }
      }
      if (!jsonObj.get("workloadType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workloadType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workloadType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1alpha1ClusterDefinitionSpecComponentDefsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1alpha1ClusterDefinitionSpecComponentDefsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1alpha1ClusterDefinitionSpecComponentDefsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1alpha1ClusterDefinitionSpecComponentDefsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<V1alpha1ClusterDefinitionSpecComponentDefsInner>() {
           @Override
           public void write(JsonWriter out, V1alpha1ClusterDefinitionSpecComponentDefsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1alpha1ClusterDefinitionSpecComponentDefsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1alpha1ClusterDefinitionSpecComponentDefsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1alpha1ClusterDefinitionSpecComponentDefsInner
  * @throws IOException if the JSON string is invalid with respect to V1alpha1ClusterDefinitionSpecComponentDefsInner
  */
  public static V1alpha1ClusterDefinitionSpecComponentDefsInner fromJson(String jsonString) throws IOException {
    return new JSON().getGson().fromJson(jsonString, V1alpha1ClusterDefinitionSpecComponentDefsInner.class);
  }

 /**
  * Convert an instance of V1alpha1ClusterDefinitionSpecComponentDefsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return new JSON().getGson().toJson(this);
  }
}

