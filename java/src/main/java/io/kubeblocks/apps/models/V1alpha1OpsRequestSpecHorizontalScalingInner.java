/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.27.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubeblocks.apps.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubeblocks.apps.models.V1alpha1OpsRequestSpecHorizontalScalingInnerScaleIn;
import io.kubeblocks.apps.models.V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * HorizontalScaling defines the parameters of a horizontal scaling operation.
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-13T15:59:08.817252Z[Etc/UTC]")
public class V1alpha1OpsRequestSpecHorizontalScalingInner {
  public static final String SERIALIZED_NAME_COMPONENT_NAME = "componentName";
  @SerializedName(SERIALIZED_NAME_COMPONENT_NAME)
  private String componentName;

  public static final String SERIALIZED_NAME_REPLICAS = "replicas";
  @SerializedName(SERIALIZED_NAME_REPLICAS)
  private Integer replicas;

  public static final String SERIALIZED_NAME_SCALE_IN = "scaleIn";
  @SerializedName(SERIALIZED_NAME_SCALE_IN)
  private V1alpha1OpsRequestSpecHorizontalScalingInnerScaleIn scaleIn;

  public static final String SERIALIZED_NAME_SCALE_OUT = "scaleOut";
  @SerializedName(SERIALIZED_NAME_SCALE_OUT)
  private V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut scaleOut;

  public V1alpha1OpsRequestSpecHorizontalScalingInner() {
  }

  public V1alpha1OpsRequestSpecHorizontalScalingInner componentName(String componentName) {
    
    this.componentName = componentName;
    return this;
  }

   /**
   * Specifies the name of the Component.
   * @return componentName
  **/
  @jakarta.annotation.Nonnull
  public String getComponentName() {
    return componentName;
  }


  public void setComponentName(String componentName) {
    this.componentName = componentName;
  }


  public V1alpha1OpsRequestSpecHorizontalScalingInner replicas(Integer replicas) {
    
    this.replicas = replicas;
    return this;
  }

   /**
   * Deprecated: since v0.9, use scaleOut and scaleIn instead. Specifies the number of replicas for the component. Cannot be used with \&quot;scaleIn\&quot; and \&quot;scaleOut\&quot;.
   * minimum: 0
   * @return replicas
  **/
  @jakarta.annotation.Nullable
  public Integer getReplicas() {
    return replicas;
  }


  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }


  public V1alpha1OpsRequestSpecHorizontalScalingInner scaleIn(V1alpha1OpsRequestSpecHorizontalScalingInnerScaleIn scaleIn) {
    
    this.scaleIn = scaleIn;
    return this;
  }

   /**
   * Get scaleIn
   * @return scaleIn
  **/
  @jakarta.annotation.Nullable
  public V1alpha1OpsRequestSpecHorizontalScalingInnerScaleIn getScaleIn() {
    return scaleIn;
  }


  public void setScaleIn(V1alpha1OpsRequestSpecHorizontalScalingInnerScaleIn scaleIn) {
    this.scaleIn = scaleIn;
  }


  public V1alpha1OpsRequestSpecHorizontalScalingInner scaleOut(V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut scaleOut) {
    
    this.scaleOut = scaleOut;
    return this;
  }

   /**
   * Get scaleOut
   * @return scaleOut
  **/
  @jakarta.annotation.Nullable
  public V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut getScaleOut() {
    return scaleOut;
  }


  public void setScaleOut(V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut scaleOut) {
    this.scaleOut = scaleOut;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1OpsRequestSpecHorizontalScalingInner v1alpha1OpsRequestSpecHorizontalScalingInner = (V1alpha1OpsRequestSpecHorizontalScalingInner) o;
    return Objects.equals(this.componentName, v1alpha1OpsRequestSpecHorizontalScalingInner.componentName) &&
        Objects.equals(this.replicas, v1alpha1OpsRequestSpecHorizontalScalingInner.replicas) &&
        Objects.equals(this.scaleIn, v1alpha1OpsRequestSpecHorizontalScalingInner.scaleIn) &&
        Objects.equals(this.scaleOut, v1alpha1OpsRequestSpecHorizontalScalingInner.scaleOut);
  }

  @Override
  public int hashCode() {
    return Objects.hash(componentName, replicas, scaleIn, scaleOut);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1OpsRequestSpecHorizontalScalingInner {\n");
    sb.append("    componentName: ").append(toIndentedString(componentName)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    scaleIn: ").append(toIndentedString(scaleIn)).append("\n");
    sb.append("    scaleOut: ").append(toIndentedString(scaleOut)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("componentName");
    openapiFields.add("replicas");
    openapiFields.add("scaleIn");
    openapiFields.add("scaleOut");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("componentName");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1alpha1OpsRequestSpecHorizontalScalingInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1alpha1OpsRequestSpecHorizontalScalingInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1alpha1OpsRequestSpecHorizontalScalingInner is not found in the empty JSON string", V1alpha1OpsRequestSpecHorizontalScalingInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1alpha1OpsRequestSpecHorizontalScalingInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1alpha1OpsRequestSpecHorizontalScalingInner` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : V1alpha1OpsRequestSpecHorizontalScalingInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("componentName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `componentName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("componentName").toString()));
      }
      // validate the optional field `scaleIn`
      if (jsonObj.get("scaleIn") != null && !jsonObj.get("scaleIn").isJsonNull()) {
        V1alpha1OpsRequestSpecHorizontalScalingInnerScaleIn.validateJsonObject(jsonObj.getAsJsonObject("scaleIn"));
      }
      // validate the optional field `scaleOut`
      if (jsonObj.get("scaleOut") != null && !jsonObj.get("scaleOut").isJsonNull()) {
        V1alpha1OpsRequestSpecHorizontalScalingInnerScaleOut.validateJsonObject(jsonObj.getAsJsonObject("scaleOut"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1alpha1OpsRequestSpecHorizontalScalingInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1alpha1OpsRequestSpecHorizontalScalingInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1alpha1OpsRequestSpecHorizontalScalingInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1alpha1OpsRequestSpecHorizontalScalingInner.class));

       return (TypeAdapter<T>) new TypeAdapter<V1alpha1OpsRequestSpecHorizontalScalingInner>() {
           @Override
           public void write(JsonWriter out, V1alpha1OpsRequestSpecHorizontalScalingInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1alpha1OpsRequestSpecHorizontalScalingInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1alpha1OpsRequestSpecHorizontalScalingInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1alpha1OpsRequestSpecHorizontalScalingInner
  * @throws IOException if the JSON string is invalid with respect to V1alpha1OpsRequestSpecHorizontalScalingInner
  */
  public static V1alpha1OpsRequestSpecHorizontalScalingInner fromJson(String jsonString) throws IOException {
    return new JSON().getGson().fromJson(jsonString, V1alpha1OpsRequestSpecHorizontalScalingInner.class);
  }

 /**
  * Convert an instance of V1alpha1OpsRequestSpecHorizontalScalingInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return new JSON().getGson().toJson(this);
  }
}

